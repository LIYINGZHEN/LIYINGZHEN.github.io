<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>algorithm on Max Li</title>
    <link>https://www.maxlivinci.com/tags/algorithm/</link>
    <description>Recent content in algorithm on Max Li</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Wed, 27 May 2020 07:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.maxlivinci.com/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tree questions</title>
      <link>https://www.maxlivinci.com/algorithm/_8_tree/</link>
      <pubDate>Wed, 27 May 2020 07:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/algorithm/_8_tree/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Queue questions</title>
      <link>https://www.maxlivinci.com/algorithm/_7_queue/</link>
      <pubDate>Wed, 27 May 2020 06:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/algorithm/_7_queue/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Stack questions</title>
      <link>https://www.maxlivinci.com/algorithm/_6_stack/</link>
      <pubDate>Wed, 27 May 2020 05:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/algorithm/_6_stack/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Linked List questions</title>
      <link>https://www.maxlivinci.com/algorithm/_5_linked_list/</link>
      <pubDate>Wed, 27 May 2020 04:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/algorithm/_5_linked_list/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Storting questions</title>
      <link>https://www.maxlivinci.com/algorithm/_4_sorting/</link>
      <pubDate>Wed, 27 May 2020 03:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/algorithm/_4_sorting/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Searching questions</title>
      <link>https://www.maxlivinci.com/algorithm/_3_searching/</link>
      <pubDate>Wed, 27 May 2020 02:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/algorithm/_3_searching/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Array questions</title>
      <link>https://www.maxlivinci.com/algorithm/_2_array/</link>
      <pubDate>Wed, 27 May 2020 01:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/algorithm/_2_array/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Recursion questions</title>
      <link>https://www.maxlivinci.com/algorithm/_1_recursion/</link>
      <pubDate>Wed, 27 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/algorithm/_1_recursion/</guid>
      <description> Tower of Hanoi Josephus Problem  </description>
    </item>
    
    <item>
      <title>Stack - Iterative Tower of Hanoi</title>
      <link>https://www.maxlivinci.com/algorithm/stack_tower_of_hanoi/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/algorithm/stack_tower_of_hanoi/</guid>
      <description>Tower of Hanoi is a mathematical puzzle. It consists of three poles and a number of disks of different sizes which can slide onto any poles. The puzzle starts with the disk in a neat stack in ascending order of size in one pole, the smallest at the top thus making a conical shape. The objective of the puzzle is to move all the disks from one pole (say ‘source pole’) to another pole (say ‘destination pole’) with the help of the third pole (say auxiliary pole).</description>
    </item>
    
    <item>
      <title>Stack - Next greater element in an array</title>
      <link>https://www.maxlivinci.com/algorithm/stack_the_stock_span_problem/</link>
      <pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/algorithm/stack_the_stock_span_problem/</guid>
      <description>The stock span problem is a financial problem where we have a series of n daily price quotes for a stock and we need to calculate span of stock’s price for all n days. The span Si of the stock’s price on a given day i is defined as the maximum number of consecutive days just before the given day, for which the price of the stock on the current day is less than or equal to its price on the given day.</description>
    </item>
    
  </channel>
</rss>