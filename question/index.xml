<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Questions on Max Li</title>
    <link>https://www.maxlivinci.com/question/</link>
    <description>Recent content in Questions on Max Li</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Wed, 10 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.maxlivinci.com/question/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Array - Spiral Matrix</title>
      <link>https://www.maxlivinci.com/question/2020_06_10_array_spiral_matrix/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/question/2020_06_10_array_spiral_matrix/</guid>
      <description>Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.
Example 1:
Input: [ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8, 9 ] ] Output: [1,2,3,6,9,8,7,4,5] Example 2:
Input: [ [1, 2, 3, 4], [5, 6, 7, 8], [9,10,11,12] ] Output: [1,2,3,4,8,12,11,10,9,5,6,7]  METHOD 1
package test; import org.junit.Test; /** * Question : Spiral Matrix * Complexity : Time: O(m*n) ; Space: O(1) * Author : Max */ public class SpiralMatrix { static void print(int[][] matrix) { int rowsCount = matrix.</description>
    </item>
    
    <item>
      <title>Array - Trapping rain water</title>
      <link>https://www.maxlivinci.com/question/2020_06_10_array_trapping_rain_water/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/question/2020_06_10_array_trapping_rain_water/</guid>
      <description>Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.
Examples:
Input: arr[] = {2, 0, 2} Output: 2 Explanation: The structure is like below We can trap 2 units of water in the middle gap.  METHOD 1
import org.junit.Test; import static org.junit.Assert.assertEquals; /** * Question : Trapping rain water * Complexity : Time: O(n) ; Space: O(1) * Author : Max */ public class TrappingRainWater { static int maxWater(int[] arr) { if (arr.</description>
    </item>
    
    <item>
      <title>Queue - Maximum of all subarrays of size k</title>
      <link>https://www.maxlivinci.com/question/queue_maximum_of_all_subarrays_of_size_k/</link>
      <pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/question/queue_maximum_of_all_subarrays_of_size_k/</guid>
      <description>Given an array and an integer K, find the maximum for each and every contiguous subarray of size k.
Examples :
Input: arr[] = {1, 2, 3, 1, 4, 5, 2, 3, 6}, K = 3 Output: 3 3 4 5 5 5 6 Explanation: Maximum of 1, 2, 3 is 3 Maximum of 2, 3, 1 is 3 Maximum of 3, 1, 4 is 4 Maximum of 1, 4, 5 is 5 Maximum of 4, 5, 2 is 5 Maximum of 5, 2, 3 is 5 Maximum of 2, 3, 6 is 6 Input: arr[] = {8, 5, 10, 7, 9, 4, 15, 12, 90, 13}, K = 4 Output: 10 10 10 15 15 90 90 Explanation: Maximum of first 4 elements is 10, similarly for next 4 elements (i.</description>
    </item>
    
    <item>
      <title>Queue - Implement k queues in an array</title>
      <link>https://www.maxlivinci.com/question/queue_implement_k_queues_in_an_array/</link>
      <pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/question/queue_implement_k_queues_in_an_array/</guid>
      <description>Create a data structure kQueues that represents k queues. Implementation of kQueues should use only one array, i.e., k queues should use the same array for storing elements. Following functions must be supported by kQueues.
 enqueue(int x, int qn) –&amp;gt; adds x to queue number ‘qn’ where qn is from 0 to k-1 dequeue(int qn) –&amp;gt; deletes an element from queue number ‘qn’ where qn is from 0 to k-1   METHOD 1</description>
    </item>
    
    <item>
      <title>Queue - Implementation of deque using doubly linked list</title>
      <link>https://www.maxlivinci.com/question/queue_implement_deque_using_doubly_linked_list/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/question/queue_implement_deque_using_doubly_linked_list/</guid>
      <description>Deque or Double Ended Queue is a generalized version of Queue data structure that allows insert and delete at both ends. In previous post Implementation of Deque using circular array has been discussed. Now in this post we see how we implement Deque using Doubly Linked List.
Operations on Deque :
Mainly the following four basic operations are performed on queue :
 insertFront() : Adds an item at the front of Deque.</description>
    </item>
    
    <item>
      <title>Queue - Implementation of deque using circular array</title>
      <link>https://www.maxlivinci.com/question/queue_implement_deque_using_circular_array/</link>
      <pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/question/queue_implement_deque_using_circular_array/</guid>
      <description>Deque or Double Ended Queue is a generalized version of Queue data structure that allows insert and delete at both ends.In previous post we had discussed introduction of deque. Now in this post we see how we implement deque Using circular array. Operations on Deque:
Mainly the following four basic operations are performed on queue:
 insetFront(): Adds an item at the front of Deque. insertRear(): Adds an item at the rear of Deque.</description>
    </item>
    
    <item>
      <title>Queue - Generate binary number</title>
      <link>https://www.maxlivinci.com/question/queue_generate_binary_numbers/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/question/queue_generate_binary_numbers/</guid>
      <description>Given a number n, write a function that generates and prints all binary numbers with decimal values from 1 to n.
Examples:
Input: n = 2 Output: 1, 10 Input: n = 5 Output: 1, 10, 11, 100, 101  METHOD 1
import org.junit.Test; import java.util.LinkedList; import java.util.Queue; /** * Question : https://www.geeksforgeeks.org/interesting-method-generate-binary-numbers-1-n/ * Complexity : Time: O(n) ; Space: O(n) * Author : Max */ public class GenerateBinaryNumbers { static void generate(int n) { Queue&amp;lt;String&amp;gt; q = new LinkedList&amp;lt;&amp;gt;(); q.</description>
    </item>
    
    <item>
      <title>Stack - Iterative Tower of Hanoi</title>
      <link>https://www.maxlivinci.com/question/stack_tower_of_hanoi/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/question/stack_tower_of_hanoi/</guid>
      <description>Tower of Hanoi is a mathematical puzzle. It consists of three poles and a number of disks of different sizes which can slide onto any poles. The puzzle starts with the disk in a neat stack in ascending order of size in one pole, the smallest at the top thus making a conical shape. The objective of the puzzle is to move all the disks from one pole (say ‘source pole’) to another pole (say ‘destination pole’) with the help of the third pole (say auxiliary pole).</description>
    </item>
    
    <item>
      <title>Stack - Next greater element in an array</title>
      <link>https://www.maxlivinci.com/question/stack_the_stock_span_problem/</link>
      <pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/question/stack_the_stock_span_problem/</guid>
      <description>The stock span problem is a financial problem where we have a series of n daily price quotes for a stock and we need to calculate span of stock’s price for all n days. The span Si of the stock’s price on a given day i is defined as the maximum number of consecutive days just before the given day, for which the price of the stock on the current day is less than or equal to its price on the given day.</description>
    </item>
    
    <item>
      <title>Stack - Next greater element in an array</title>
      <link>https://www.maxlivinci.com/question/stack_the_celebrity_problem/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.maxlivinci.com/question/stack_the_celebrity_problem/</guid>
      <description>In a party of N people, only one person is known to everyone. Such a person may be present in the party, if yes, (s)he doesn’t know anyone in the party. We can only ask questions like “does A know B? “. Find the stranger (celebrity) in the minimum number of questions.
We can describe the problem input as an array of numbers/characters representing persons in the party. We also have a hypothetical function HaveAcquaintance(A, B) which returns true if A knows B, false otherwise.</description>
    </item>
    
  </channel>
</rss>